# ===============================
# = APPLICATION PROPERTIES
# ===============================

bluefin.wp.services.token.header = X-Auth-Token
bluefin.wp.services.token.secret = qV7yAA58y!BF8mS53v3vBpxQkyhmBqapR924N

bluefin.wp.services.resetpassword.email.link = http://ms-dev.internal.mcmcg.com/login/reset
bluefin.wp.services.registeruser.email.link = http://ms-dev.internal.mcmcg.com/login/reset

# ===============================
# = DATA SOURCE
# ===============================

spring.datasource.jndi-name=jdbc/BluefinWebPortalService
#spring.datasource.url = jdbc:sqlserver://localhost:3306/test
#spring.datasource.driver-class-name = com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.datasource.username = root
#spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update, validate)
spring.jpa.hibernate.ddl-auto = validate

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2008Dialect

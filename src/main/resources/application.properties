# ===============================
# = APPLICATION PROPERTIES
# ===============================

bluefin.wp.services.token.expiration = 604800
bluefin.wp.services.token.header = X-Auth-Token
bluefin.wp.services.token.secret = jDX7vCLwB6m8CMagE!DHwc9E3NeZSddyhZANK

#2 hours
bluefin.wp.services.token.expiration = 7200
#1 day
bluefin.wp.services.token.resetpassword.expiration = 86400
bluefin.wp.services.token.registeruser.expiration = 86400
#7 days
bluefin.wp.services.token.authentication.expiration = 604800
#500 years
bluefin.wp.services.token.application.expiration = 15768000000000

bluefin.wp.services.resetpassword.email.link = www.bluefin.com/resetPassword
bluefin.wp.services.registeruser.email.link = www.bluefin.com/registerUser

bluefin.wp.services.application.role.name=ROLE_THIRD_PARTY
bluefin.wp.services.application.permission.name=SEARCH_REPORTING

bluefin.wp.services.transactions.report.max.size=30000
bluefin.wp.services.transactions.report.path=/opt/tomcat/tmp/reports

bluefin.wp.services.build.artifact = @project.artifactId@
bluefin.wp.services.build.name = @project.name@
bluefin.wp.services.build.description = @project.description@
bluefin.wp.services.build.version = @project.version@

bluefin.wp.services.git.tags = @git.tags@
bluefin.wp.services.git.branch = @git.branch@
bluefin.wp.services.git.dirty = @git.dirty@
bluefin.wp.services.git.remote.origin.url = @git.remote.origin.url@
 
bluefin.wp.services.git.commit.id = @git.commit.id@
bluefin.wp.services.git.commit.id.abbrev = @git.commit.id.abbrev@
bluefin.wp.services.git.commit.id.describe = @git.commit.id.describe@
bluefin.wp.services.git.commit.id.describe-short = @git.commit.id.describe-short@
bluefin.wp.services.git.commit.user.name = @git.commit.user.name@
bluefin.wp.services.git.commit.user.email = @git.commit.user.email@
bluefin.wp.services.git.commit.message.short = @git.commit.message.short@
bluefin.wp.services.git.commit.time = @git.commit.time@
 
bluefin.wp.services.git.build.user.name = @git.build.user.name@
bluefin.wp.services.git.build.user.email = @git.build.user.email@
bluefin.wp.services.git.build.time = @git.build.time@

# ===============================
# = SPRING
# ===============================

spring.profiles.active = @spring.profiles.active@

# ===============================
# = LOGS
# ===============================

log.file.path = /opt/tomcat/logs/
log.file.name = bluefin-web-portal-services
log.file.size = 100 MB
log.level = INFO

# ===============================
# = DATA SOURCE
# ===============================

#spring.datasource.jndi-name = jdbc/BluefinWebPortalService
#spring.datasource.url = jdbc:mysql://localhost:3306/security
#spring.datasource.username = root
#spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update, validate)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

com.mcmcg.ico.bluefin.ws.wsdl.emailrequestor: ${endpoint.email.wsdl.uri}

# Use Jadira Usertype for mapping Joda Time types
# For Hibernate native properties must be used spring.jpa.properties.* (the 
# prefix is stripped before adding them to the entity manager).
spring.jpa.properties.jadira.usertype.autoRegisterUserTypes = true

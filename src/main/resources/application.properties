# ===============================
# = APPLICATION PROPERTIES
# ===============================
bluefin.wp.services.build.artifact = @project.artifactId@
bluefin.wp.services.build.name = @project.name@
bluefin.wp.services.build.description = @project.description@
bluefin.wp.services.build.version = @project.version@

bluefin.wp.services.git.tags = @git.tags@
bluefin.wp.services.git.branch = @git.branch@
bluefin.wp.services.git.dirty = @git.dirty@
bluefin.wp.services.git.remote.origin.url = @git.remote.origin.url@
 
bluefin.wp.services.git.commit.id = @git.commit.id@
bluefin.wp.services.git.commit.id.abbrev = @git.commit.id.abbrev@
bluefin.wp.services.git.commit.id.describe = @git.commit.id.describe@
bluefin.wp.services.git.commit.id.describe-short = @git.commit.id.describe-short@
bluefin.wp.services.git.commit.user.name = @git.commit.user.name@
bluefin.wp.services.git.commit.user.email = @git.commit.user.email@
bluefin.wp.services.git.commit.message.short = @git.commit.message.short@
bluefin.wp.services.git.commit.time = @git.commit.time@
 
bluefin.wp.services.git.build.user.name = @git.build.user.name@
bluefin.wp.services.git.build.user.email = @git.build.user.email@
bluefin.wp.services.git.build.time = @git.build.time@

# ===============================
# = SPRING
# ===============================

#spring.profiles.active = @spring.profiles.active@

# ===============================
# = LOGS
# ===============================

log.file.path = /opt/tomcat_bluefin/bluefin_config/logs/
log.file.name = bluefin-web-portal-services
log.file.size = 10 MB
log.level = INFO
#log.level = DEBUG

# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.bluefin.jndi-name =jdbc/BluefinWebPortalService
spring.datasource.binddb.jndi-name =jdbc/BluefinBinDbService
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update, validate)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Use Jadira Usertype for mapping Joda Time types
# For Hibernate native properties must be used spring.jpa.properties.* (the 
# prefix is stripped before adding them to the entity manager).
#spring.jpa.properties.jadira.usertype.autoRegisterUserTypes = true

spring.datasource.jmx-enabled=false
spring.jmx.enabled=false

# Cookies Config
secure.cookie=true

# CSP Header
csp.header=www.google-analytics.com ajax.googleapis.com www.midlandcreditonline.com *.optimizely.com fullstory.com *.mcmpay.com *.marketo.net www.googletagmanager.com  

spring.bluefin.muti.file.upload.size=5MB

spring.bluefin.mcm.legal.entity = MCM-LATITUDE
spring.bluefin.acf.legal.entity = ACF-LATITUDE
spring.bluefin.jpf.legal.entity = JPF-LATITUDE

#Endpoints Services

gateway.payment.util.url= https://bluefin-dev.mcmcg.com
gateway.payment.util.email.endpoint=/payment-utils/api/sendEmail

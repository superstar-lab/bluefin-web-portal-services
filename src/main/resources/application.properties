# ===============================
# = APPLICATION PROPERTIES
# ===============================

bluefin.wp.services.token.expiration = 604800
bluefin.wp.services.token.header = X-Auth-Token
bluefin.wp.services.token.secret = shhhh!!!

bluefin.wp.services.build.artifact = @project.artifactId@
bluefin.wp.services.build.name = @project.name@
bluefin.wp.services.build.description = @project.description@
bluefin.wp.services.build.version = @project.version@

bluefin.wp.services.git.tags = @git.tags@
bluefin.wp.services.git.branch = @git.branch@
bluefin.wp.services.git.dirty = @git.dirty@
bluefin.wp.services.git.remote.origin.url = @git.remote.origin.url@
 
bluefin.wp.services.git.commit.id = @git.commit.id@
bluefin.wp.services.git.commit.id.abbrev = @git.commit.id.abbrev@
bluefin.wp.services.git.commit.id.describe = @git.commit.id.describe@
bluefin.wp.services.git.commit.id.describe-short = @git.commit.id.describe-short@
bluefin.wp.services.git.commit.user.name = @git.commit.user.name@
bluefin.wp.services.git.commit.user.email = @git.commit.user.email@
bluefin.wp.services.git.commit.message.short = @git.commit.message.short@
bluefin.wp.services.git.commit.time = @git.commit.time@
 
bluefin.wp.services.git.build.user.name = @git.build.user.name@
bluefin.wp.services.git.build.user.email = @git.build.user.email@
bluefin.wp.services.git.build.time = @git.build.time@

# ===============================
# = SPRING
# ===============================

spring.profiles.active = @spring.profiles.active@

# ===============================
# = DATA SOURCE
# ===============================

spring.datasource.url = jdbc:mysql://localhost:3306/security
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update, validate)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
